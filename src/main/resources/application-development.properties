spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/notification}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:password}


spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.flyway.baselineOnMigrate=true

spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USER:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

server.error.include-message=always

rabbitmq.exchange.name=${RABBITMQ_EXCHANGE:recipemanagement}

rabbitmq.routing.keys.collection=${RABBITMQ_ROUTING_KEYS_COLLECTION:collection.created,collection.updated,collection.deleted}
rabbitmq.routing.keys.review=${RABBITMQ_ROUTING_KEYS_REVIEW:review.created}
rabbitmq.routing.keys.user=${RABBITMQ_ROUTING_KEYS_USER:users.count}

rabbitmq.queue.collection=${RABBITMQ_QUEUE_COLLECTION:collection.queue}
rabbitmq.queue.review=${RABBITMQ_QUEUE_REVIEW:review.queue}
rabbitmq.queue.user=${RABBITMQ_QUEUE_USER:user.queue}
#TODO add everything to docker compose
#grpc.server.port=9091
#server.port=8081