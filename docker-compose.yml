services:
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/data
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 30s
      retries: 5

  postgres:
    image: postgres:17.0
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: notification
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password

  notification-service:
    image: ghcr.io/thi-cnd/notification_service:latest
    ports:
      - "8080:8080" # REST-Server Port
      - "9090:9090" # gRPC-Server Port
    environment:
      SPRING_PROFILES_ACTIVE: development
      DB_USER: postgres
      DB_PASSWORD: password
      DB_URL: jdbc:postgresql://postgres:5432/notification
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_EXCHANGE: recipemanagement
      RABBITMQ_ROUTING_KEYS_COLLECTION: collection.created,collection.updated,collection.deleted
      RABBITMQ_ROUTING_KEYS_REVIEW: review.created
      RABBITMQ_ROUTING_KEYS_USER: users.count
      RABBITMQ_QUEUE_COLLECTION: collection.queue
      RABBITMQ_QUEUE_REVIEW: review.queue
      RABBITMQ_QUEUE_USER: user.queue
      GRPC_USER_SERVICE_HOST: localhost
      GRPC_USER_SERVICE_PORT: 9092
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
  rabbitmq_data: